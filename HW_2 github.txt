JSON 
4. Создать внешний репозиторий c названием JSON:
NEW - Repository Name (JSON) - public - add a ReadMe file - create repository.
 5. Клонировать репозиторий JSON на локальный компьютер:
1) code-copied link; 2)открываем git bush: 
mkdir git_test
ls
cd git_test
git clone (link)
 6. Внутри локального JSON создать файл “new.json”: 
la -la
cd git_test /
touch new.json
 7. Добавить файл под гит:
git add new.json
 8. Закоммитить файл: 
git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий: 
git status
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON:
vim new_json
{	"Full name": "Brilewskaya Anastasiya Valerewna"
	"Age": "25",
	"Pets": "1 cat",
	"Future salary": "1 000 000 $" }
 11. Отправить изменения на внешний репозиторий:
git status
git commit -m "add information about yourself"
git push 
 12. Создать файл preferences.json 
touch preferences.json 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON:
vim preferences.json
{	"Film": "1+1",
	"Series": "Chernaya lyubov",
	"Time of season": "Summer",
	"Counry": "Thai" }
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:
touch skills.json
vim skills.json
{	"Skills": {"Postman",
		   "Git, GitHub, git Bash",
		   "Terminal",
		   "Android Studio",
		   "Charles, Fiddler",
		   "Jmeter",
	           "Chrome DevTools",
	           "Checklists",
	           "Bug reports" }}
 15. Отправить сразу 2 файла на внешний репозиторий:
git add .
git status
git commit -m "add information about my the favourite categories and skills in testing.json" 
git push
 16. На веб интерфейсе создать файл bug_report.json:
add file - добавить заголовок bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
cнизу добавить commit - затем кнопка commit new file. 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON:
{	"Summary": "New project",
	"раздел": "Purchase licenses",	
	"project": "тестируем приложение TestRail",
	"status": "New",
	"Step to Reproduce": [
"1. Проходим регистрацию по ссылке https://www.gurock.com/testrail/",
"2. Проходим в раздел Purchase licenses",
"3. Заполняем поля валидным значением". ]
	"result": [ "1. консольная ошибка 404",
		  "2. ошибка в таблице элемента" ]
"Expected result": [ "Невозможно прочитать значение свойства underfined в HTMLTableE1ement.",
		   "сервер ответил с состоянием 404 (не найдено)" ] }

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
добавить commit - затем кнопка commit new file

 20. Синхронизировать внешний и локальный репозиторий JSON:
git fetch
git pull



XML
 21. Создать внешний репозиторий c названием XML:
NEW - Repository Name (XML) - public - add a ReadMe file - create repository.
 22. Клонировать репозиторий XML на локальный компьютер:
1) code-copied link; 2)открываем git bush: 
mkdir git_test1
ls
cd git_test1
git clone (link)
 23. Внутри локального XML создать файл “new.xml”:
ls -la
cd git_test1 /
touch new.xml
 24. Добавить файл под гит:
git add new.xml
 25. Закоммитить файл:
git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий:
git status
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML:
vim new_xml
	<full name>Brilewskaya Anastasiya Valerewna</full name>
	<age>25</age>
	<pets>1 cat<pets/>
	<future salary>1 000 000 $</future salary>
 28. Отправить изменения на внешний репозиторий:
git status
git commit -m "add information about yourself.xml"
git push 
 29. Создать файл preferences.xml:
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML:
        <film>1+1</film>
	<series>Chernaya lyubov</series>
	<time of season>Summer</time of season>
	<counry>Thai</country>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML:
touch skills.json
vim skills.xml
	<Skills> 
           Postman
	   Git, GitHub, git Bash
           Terminal
	   Android Studio
           Charles, Fiddler
           Jmeter
	   Chrome DevTools
	   Checklists
	   Bug reports</skills>
 32. Сделать коммит в одну строку:
git add preferences.xml skills.xml
git status
git commit -m "add information about my the favourite categories and skills in testing.xml" 
 33. Отправить сразу 2 файла на внешний репозиторий:
git status
git push
 34. На веб интерфейсе создать файл bug_report.xml:
add file - добавить заголовок bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
cнизу добавить commit - затем кнопка commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML:
<Summary>New project
	раздел Purchase licenses</Summary>	
	<project>тестируем приложение TestRail</project>
	<status>New</status>
	<Step to Reproduce>1. Проходим регистрацию по ссылке https://www.gurock.com/testrail/ 2. Проходим в раздел Purchase licenses 3. Заполняем поля валидным значением</step to Reproduce>
	<result>1.консольная ошибка 404 2. ошибка в таблице элемента</result>
<Expected result>Невозможно прочитать значение свойства underfined в HTMLTableE1ement сервер ответил с состоянием 404 (не найдено)</Expected result>
		   
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
cнизу добавить commit - затем кнопка commit new file.
 38. Синхронизировать внешний и локальный репозиторий XML:
git fetch
git pull




TXT
 1. Создать внешний репозиторий c названием TXT:
NEW - Repository Name (TXT) - public - add a ReadMe file - create repository
 2. Клонировать репозиторий TXT на локальный компьютер:
1) code-copied link; 2)открываем git bush: 
mkdir git_test2
ls
cd git_test2
git clone (link)
 3. Внутри локального TXT создать файл “new.txt”:
la -la
cd git_test2 /
touch new.txt
 4. Добавить файл под гит:
git add new.txt
 5. Закоммитить файл:
git commit -m "add new.txt"
 6. Отправить файл на внешний GitHub репозиторий:
git status
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT:
vim new_txt
	Full name: Brilewskaya Anastasiya Valerewna
	Age: 25,
	Pets: 1 cat,
	Future salary: 1 000 000 $.
 8. Отправить изменения на внешний репозиторий:
git status
git commit -m "add information about yourself.txt"
git push
 9. Создать файл preferences.txt:
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT:
vim preferences.txt
	Film: 1+1,
	Series: Chernaya lyubov,
	Time of season: Summer,
	Counry: Thai.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT:
touch skills.txt
vim skills.json
	Skills: Postman,
		   Git, GitHub, git Bash,
		   Terminal,
		   Android Studio,
		   Charles, Fiddler,
		   Jmeter,
	           Chrome DevTools,
	           Checklists,
	           Bug reports.
 12. Сделать коммит в одну строку:
git add preferences.txt skills.txt
git status
git commit -m "add information about my the favourite categories and skills in testing.txt" 
 13. Отправить сразу 2 файла на внешний репозиторий:
git status
git push
 14. На веб интерфейсе создать файл bug_report.txt:
add file - добавить заголовок bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
cнизу добавить commit - затем кнопка commit new file.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT:
Summary: New project
	раздел Purchase licenses	
	project: тестируем приложение TestRail
	status: New
	Step to Reproduce: 
1. Проходим регистрацию по ссылке https://www.gurock.com/testrail/
2. Проходим в раздел Purchase licenses
3. Заполняем поля валидным значением
	result: 1. консольная ошибка 404
		  2. ошибка в таблице элемента
Expected result: Невозможно прочитать значение свойства underfined в HTMLTableE1ement.
		   сервер ответил с состоянием 404 (не найдено)
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе:
cнизу добавить commit - затем кнопка commit new file.
 18. Синхронизировать внешний и локальный репозиторий TXT:
git fetch
git pull
